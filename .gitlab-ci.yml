stages:
  - build
  - tests
  - publish


# Global parameters for all jobs, cache everything we install.
variables:
  PIP_CACHE_DIR: "${CI_PROJECT_DIR}/.pip_cache"

.pip-cache: &pip_cache
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - .pip_cache/
  policy: pull-push

.deb-common:
  stage: build
  variables:
    DEBIAN_FRONTEND: noninteractive
  script:
    - make deb
  after_script:
    - mkdir --parents dist/
    - mv --verbose ../*.deb dist/
  artifacts:
    expire_in: 7 days
    paths:
      - dist/python3-aiostem_*.deb


python3-package:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.12-alpine
  stage: build
  cache:
    <<: *pip_cache
  script:
    - python3 -m build --sdist --wheel
  artifacts:
    name: "aiostem-${CI_COMMIT_REF_NAME}"
    expire_in: 7 days
    paths:
      - dist/

debian12-package:
  image: ${CI_REGISTRY}/dockers/ci/debian-build:12
  extends: .deb-common

ubuntu2404-package:
  image: ${CI_REGISTRY}/dockers/ci/ubuntu-build:24.04
  extends: .deb-common

python3-linter:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.12-alpine
  stage: tests
  cache:
    <<: *pip_cache
  needs: []
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-linting
  script:
    - ruff check --exit-zero --output-format=gitlab -o gl-code-quality-report.json
    - ruff format --check --diff
    - ruff check
  artifacts:
    expire_in: 7 days
    reports:
      codequality: gl-code-quality-report.json
  allow_failure: true

python3-mypy:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.12-alpine
  stage: tests
  cache:
    <<: *pip_cache
  needs: []
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-aiostem
    - make install-linting
  script:
    - mypy --junit-xml mypy.xml
  artifacts:
    reports:
      junit: mypy.xml
  allow_failure: true

python3-tests:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.12-alpine
  stage: tests
  needs: []
  variables:
    AIOSTEM_HOST: 'torcontrol'
    AIOSTEM_PASS: 'aiostem'
  services:
    - name: "${CI_REGISTRY}/${CI_PROJECT_ROOT_NAMESPACE}/docker/tor-client:0.4.8.12"
      alias: torcontrol
      command: [
        'tor',
        '-f',
        '/etc/tor/torrc',
        'HashedControlPassword',
        '16:163184F7911BFBE760F8E71F6B13522B768BE174591BA285B3373FBC07'
      ]
  cache:
    <<: *pip_cache
  before_script:
    - python -m venv venv
    - source venv/bin/activate
    - make install-testing
  script:
    - pytest --cov=aiostem --junit-xml=pytest.xml
    - coverage xml
  coverage: '/TOTAL.+ ([0-9]{1,3}[.][0-9]{2}%)/'
  artifacts:
    reports:
      coverage_report:
        coverage_format: cobertura
        path: coverage.xml
      junit: pytest.xml

python3-publish:
  image: ${CI_REGISTRY}/dockers/ci/python-build:3.12-alpine
  stage: publish
  variables:
    TWINE_REPOSITORY_URL: ${CI_SERVER_URL}/api/v4/projects/${CI_PROJECT_ID}/packages/pypi
    TWINE_USERNAME: gitlab-ci-token
    TWINE_PASSWORD: ${CI_JOB_TOKEN}
  only:
    - tags
  needs:
    - python3-package
  script:
    - twine upload dist/aiostem-*.whl
